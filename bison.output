Terminals unused in grammar

    ERRO
    FLOAT
    VARIAVEL
    STRING
    COMENTARIO_LINHA
    COMENTARIO
    FOR
    WHILE
    IF
    ELSE
    ELIF
    OUTPUT
    INPUT
    RETURN
    INICIOBLOCO
    FIMBLOCO
    ATRIBUICAO
    ARITMETICOS
    RELACIONAIS
    LOGICOS
    BOOLEAN
    VOID
    MAIN
    ELEVADO
    '<'
    '>'
    '='
    "!="
    "<="
    ">="


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | line input

    3 line: exp FIMLINHA
    4     | FIMLINHA

    5 exp: INT
    6    | exp '+' exp
    7    | exp '-' exp
    8    | exp '*' exp
    9    | exp '/' exp
   10    | '-' exp
   11    | exp '^' exp
   12    | '(' exp ')'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 12
    ')' (41) 12
    '*' (42) 8
    '+' (43) 6
    '-' (45) 7 10
    '/' (47) 9
    '<' (60)
    '=' (61)
    '>' (62)
    '^' (94) 11
    error (256)
    ERRO (258)
    FLOAT (259)
    VARIAVEL <name> (260)
    STRING (261)
    COMENTARIO_LINHA (262)
    COMENTARIO (263)
    FOR (264)
    WHILE (265)
    IF (266)
    ELSE (267)
    ELIF (268)
    OUTPUT (269)
    INPUT (270)
    RETURN (271)
    INICIOBLOCO (272)
    FIMBLOCO (273)
    ATRIBUICAO (274)
    ARITMETICOS (275)
    RELACIONAIS (276)
    LOGICOS (277)
    BOOLEAN (278)
    VOID (279)
    FIMLINHA (280) 3 4
    MAIN (281)
    ELEVADO (282)
    INT <num_int> (283) 5
    "!=" (284)
    "<=" (285)
    ">=" (286)
    NEGATIVO (287)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    input (44)
        on left: 1 2
        on right: 0 2
    line (45)
        on left: 3 4
        on right: 2
    exp <num_int> (46)
        on left: 5 6 7 8 9 10 11 12
        on right: 3 6 7 8 9 10 11 12


State 0

    0 $accept: . input $end

    FIMLINHA  shift, and go to state 1
    INT       shift, and go to state 2
    '-'       shift, and go to state 3
    '('       shift, and go to state 4

    $default  reduce using rule 1 (input)

    input  go to state 5
    line   go to state 6
    exp    go to state 7


State 1

    4 line: FIMLINHA .

    $default  reduce using rule 4 (line)


State 2

    5 exp: INT .

    $default  reduce using rule 5 (exp)


State 3

   10 exp: '-' . exp

    INT  shift, and go to state 2
    '-'  shift, and go to state 3
    '('  shift, and go to state 4

    exp  go to state 8


State 4

   12 exp: '(' . exp ')'

    INT  shift, and go to state 2
    '-'  shift, and go to state 3
    '('  shift, and go to state 4

    exp  go to state 9


State 5

    0 $accept: input . $end

    $end  shift, and go to state 10


State 6

    2 input: line . input

    FIMLINHA  shift, and go to state 1
    INT       shift, and go to state 2
    '-'       shift, and go to state 3
    '('       shift, and go to state 4

    $default  reduce using rule 1 (input)

    input  go to state 11
    line   go to state 6
    exp    go to state 7


State 7

    3 line: exp . FIMLINHA
    6 exp: exp . '+' exp
    7    | exp . '-' exp
    8    | exp . '*' exp
    9    | exp . '/' exp
   11    | exp . '^' exp

    FIMLINHA  shift, and go to state 12
    '+'       shift, and go to state 13
    '-'       shift, and go to state 14
    '*'       shift, and go to state 15
    '/'       shift, and go to state 16
    '^'       shift, and go to state 17


State 8

    6 exp: exp . '+' exp
    7    | exp . '-' exp
    8    | exp . '*' exp
    9    | exp . '/' exp
   10    | '-' exp .
   11    | exp . '^' exp

    '^'  shift, and go to state 17

    $default  reduce using rule 10 (exp)


State 9

    6 exp: exp . '+' exp
    7    | exp . '-' exp
    8    | exp . '*' exp
    9    | exp . '/' exp
   11    | exp . '^' exp
   12    | '(' exp . ')'

    '+'  shift, and go to state 13
    '-'  shift, and go to state 14
    '*'  shift, and go to state 15
    '/'  shift, and go to state 16
    '^'  shift, and go to state 17
    ')'  shift, and go to state 18


State 10

    0 $accept: input $end .

    $default  accept


State 11

    2 input: line input .

    $default  reduce using rule 2 (input)


State 12

    3 line: exp FIMLINHA .

    $default  reduce using rule 3 (line)


State 13

    6 exp: exp '+' . exp

    INT  shift, and go to state 2
    '-'  shift, and go to state 3
    '('  shift, and go to state 4

    exp  go to state 19


State 14

    7 exp: exp '-' . exp

    INT  shift, and go to state 2
    '-'  shift, and go to state 3
    '('  shift, and go to state 4

    exp  go to state 20


State 15

    8 exp: exp '*' . exp

    INT  shift, and go to state 2
    '-'  shift, and go to state 3
    '('  shift, and go to state 4

    exp  go to state 21


State 16

    9 exp: exp '/' . exp

    INT  shift, and go to state 2
    '-'  shift, and go to state 3
    '('  shift, and go to state 4

    exp  go to state 22


State 17

   11 exp: exp '^' . exp

    INT  shift, and go to state 2
    '-'  shift, and go to state 3
    '('  shift, and go to state 4

    exp  go to state 23


State 18

   12 exp: '(' exp ')' .

    $default  reduce using rule 12 (exp)


State 19

    6 exp: exp . '+' exp
    6    | exp '+' exp .
    7    | exp . '-' exp
    8    | exp . '*' exp
    9    | exp . '/' exp
   11    | exp . '^' exp

    '*'  shift, and go to state 15
    '/'  shift, and go to state 16
    '^'  shift, and go to state 17

    $default  reduce using rule 6 (exp)


State 20

    6 exp: exp . '+' exp
    7    | exp . '-' exp
    7    | exp '-' exp .
    8    | exp . '*' exp
    9    | exp . '/' exp
   11    | exp . '^' exp

    '*'  shift, and go to state 15
    '/'  shift, and go to state 16
    '^'  shift, and go to state 17

    $default  reduce using rule 7 (exp)


State 21

    6 exp: exp . '+' exp
    7    | exp . '-' exp
    8    | exp . '*' exp
    8    | exp '*' exp .
    9    | exp . '/' exp
   11    | exp . '^' exp

    '^'  shift, and go to state 17

    $default  reduce using rule 8 (exp)


State 22

    6 exp: exp . '+' exp
    7    | exp . '-' exp
    8    | exp . '*' exp
    9    | exp . '/' exp
    9    | exp '/' exp .
   11    | exp . '^' exp

    '^'  shift, and go to state 17

    $default  reduce using rule 9 (exp)


State 23

    6 exp: exp . '+' exp
    7    | exp . '-' exp
    8    | exp . '*' exp
    9    | exp . '/' exp
   11    | exp . '^' exp
   11    | exp '^' exp .

    '^'  shift, and go to state 17

    $default  reduce using rule 11 (exp)
